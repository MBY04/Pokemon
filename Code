
# I imported random and sleep to enhance the game mechanics

import random
from time import sleep

# I made the Pokemon class to store stats to each pokemon created
class Pokemon:
    
    def __init__(self, name, hp, dmg):
        
        self.name = name
        self.hp = hp
        self.dmg = dmg
        
# Created names and gave stats to each pokemon




Charizard = Pokemon("Charizard", 250, 30)
Mewtwo = Pokemon("Mewtwo", 300, 40)
Pikachu = Pokemon("Pikachu", 150, 20)
Bulbasaur = Pokemon("Bulbasaur", 150, 20)
Greninja = Pokemon("Greninja", 180, 25)
Eevee = Pokemon("Eevee", 150, 20)
Snorlax = Pokemon("Snorlax", 275, 15)
Lucario = Pokemon("Lucario", 190, 25)
Magikarp = Pokemon("Magikarp", 100, 1)

# List of playable pokemon that can be picked
pokemon_list = [Charizard, Mewtwo, Pikachu, Bulbasaur, Greninja, Eevee, Snorlax, Lucario, Magikarp]

# Variable that will be used to store the user's and enemy's pokemon 
my_poke = None
enemy = None

# The function that will be used to set up the game
def prep():
    # I made the "my_poke" and "enemy" variables global to be accessed through different functions
    global my_poke, enemy
    # for loop and enumerate used to generate pokemons to be picked in a numerical order 
    for i, pokemon in enumerate(pokemon_list, start=1):
        print(f"{i}. {pokemon.name}")
    print("______________________")
    # User will be prompted to select a pokemon from the list
    pick = int(input("Select a pokemon from the list above (1-9): "))
    if pick == 1:
        my_poke = pokemon_list[0]
    elif pick == 2:
        my_poke = pokemon_list[1]
    elif pick == 3:
        my_poke = pokemon_list[2]
    elif pick == 4:
        my_poke = pokemon_list[3]
    elif pick == 5:
        my_poke = pokemon_list[4]
    elif pick == 6:
        my_poke = pokemon_list[5]
    elif pick == 7:
        my_poke = pokemon_list[6]
    elif pick == 8:
        my_poke = pokemon_list[7]
    elif pick == 9:
        my_poke = pokemon_list[8]
    else:
        # If user's input was invalid an error message will appear
        print("Please only select between 1-9, Powering off...")
        quit()
    # The enemy will recieve a random pokemon
    enemy = random.choice(pokemon_list)
    print("______________________")
    # Delcaration of user's pokemon
    print("You have picked:")
    print(f"Name: {my_poke.name}, HP: {my_poke.hp}, Damage: {my_poke.dmg} !")
    print()
    # Declaration of enemy's pokemon
    print("Your enemy has picked:")
    print(f"Name: {enemy.name}, HP: {enemy.hp}, Damage: {enemy.dmg} !")
    fight()

# Function to handle a turn-based battle.
def fight():
    # User's and enemy's hp will be assigned with the pokemon picked
    user_health = my_poke.hp
    enemy_health = enemy.hp
    
    # While loop to continue the game till either party's health falls to 0
    while user_health > 0 and enemy_health > 0:
        print("_____________________")
        print("your turn:")
        # User will be prompted to choose their move
        move = input("Choose your move (1: Attack, 2: Heal): ")
        print()
        
        if move == "1":
            # If user picked "attack" the damage will be assigned with the pokemon picked
            damage_dealt = my_poke.dmg
            print(f"{my_poke.name} dealt {damage_dealt} damage to {enemy.name}!")
            # Enemy's health will be subtracted by user's pokemon attack
            enemy_health -= damage_dealt
        elif move == "2":
            # If user picked "heal" the pokemon will be healed between 10-20 hp
            heal_amount = random.randint(10, 20)
            print(f"{my_poke.name} healed for {heal_amount} HP.")
            print()
            # If user's heal exceeds the assigned health for a pokemon it will not overheal
            if user_health + heal_amount > my_poke.hp:
                user_health = my_poke.hp
            else:
                user_health += heal_amount
        else:
            # If the user input is invalid they will be prompted to picked a move again
            print("Invalid input. Choose 1 for attack or 2 for heal.")
            continue
        
        # the enemy will randomly picked between "attack" and "heal"
        enemy_move = random.choice(["attack", "heal"])
        if enemy_move == "attack":
            damage_taken = enemy.dmg
            print(f"{enemy.name} dealt {damage_taken} damage to {my_poke.name}!")
            print()
            user_health -= damage_taken
        else:
            heal_amount = random.randint(10, 20)
            print(f"{enemy.name} healed for {heal_amount} HP.")
            print()
            if enemy_health + heal_amount > enemy.hp:
                enemy_health = enemy.hp
            else:
                enemy_health += heal_amount
        
        # Health stats of both pokemons
        print(f"{my_poke.name}'s HP: {user_health} | {enemy.name}'s HP: {enemy_health}")
    
    # If either party's health drops to 0 they will lose
    if user_health <= 0:
        print(f"{my_poke.name} fainted. You lose!")
        exit()
    else:
        print(f"{enemy.name} fainted. You win!")
        exit()
            

# The main menu.            
def start():
    while True:
        try:
            print("Welcome to the Demo")
            print("____________________")
            print("Please select your option below")
            print("")
            print("1) Start Game")
            print("2) How to Play")
            print("3) Info")
            print("")
            intro = int(input("Please insert a number: "))
            print("______________________")
            
            if intro == 1:
                prep()
                
            elif intro == 2:
                print("Select 1 to begin playing, and follow the upcoming instructions to play.")
                print("")
                print("Returning to menu please wait...")
                print("")
            elif intro == 3:
                print("A python version of pokemon, made for a project.")
                print("")
                print("Returning to menu please wait...")
                print("")
            else:
                print("Invalid input, please pick between 1-3.")
        
        except ValueError:
            print("Invalid input, please pick between 1-3.")
start()



